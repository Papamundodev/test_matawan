{"version":3,"file":"main.js","sources":["../../src/js/main.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n  const thermometer = document.querySelector(\".thermometer\");\n  const thermometerLine = document.querySelector(\".thermometer ul\");\n  const thermometerStops = thermometer.querySelectorAll(\"li\");\n  const thermometerStopsArray = Array.from(thermometerStops);\n\n  //Add current-stop class to each stop with a delay\n  function line(line) {\n    const stops = thermometer.querySelectorAll(`li[data-line-${line}=\"true\"]`);\n    const stopsArray = Array.from(stops);\n\n    // Calculate accumulated Y differences for each stop\n    const accumulatedYDiffs = stopsArray.reduce((acc, stop, index) => {\n      if (index < stopsArray.length - 1) {\n        const currentY = stop.getBoundingClientRect().top;\n        const nextY = stopsArray[index + 1].getBoundingClientRect().top;\n        const yDiff = nextY - currentY;\n\n        // Check if the next stop is the first child of a .switch-lane UL\n        const isNextStopFirstInSwitchLane =\n          stopsArray[index + 1].parentElement.classList.contains(\n            \"switch-lane\"\n          ) &&\n          stopsArray[index + 1] ===\n            stopsArray[index + 1].parentElement.firstElementChild;\n\n        // If next stop is first in switch-lane, reset accumulation\n        if (isNextStopFirstInSwitchLane) {\n          acc.push(0);\n        } else {\n          acc.push((acc[acc.length - 1] || 0) + Math.round(yDiff));\n        }\n      }\n      return acc;\n    }, []);\n\n    stopsArray.forEach((stop, index) => {\n      const stopNumber = stop.getAttribute(\"data-stop-number\");\n      if (stop.parentElement.tagName === \"UL\") {\n        setTimeout(() => {\n          // Remove current-stop from all stops\n          const previousStop = thermometer.querySelector(\".current-stop\");\n          if (previousStop) {\n            previousStop.classList.remove(\"current-stop\");\n          }\n          if (stopsArray[index + 1]) {\n            stop.parentElement.style.boxShadow = `-5px calc(${accumulatedYDiffs[index]}px + 14px) 0 0 #6f007d, -5px 0 0 0 #000`;\n            stop.classList.add(\"current-stop\");\n          }\n        }, index * 1000); // 1000ms = 1 second\n      }\n    });\n  }\n\n  const buttons = document.querySelectorAll(\".line-selector button\");\n  buttons.forEach((button) => {\n    button.addEventListener(\"click\", () => {\n      line(button.getAttribute(\"data-line\"));\n    });\n  });\n});\n"],"names":["line"],"mappings":"AAAA,SAAS,iBAAiB,oBAAoB,MAAM;AAClD,QAAM,cAAc,SAAS,cAAc,cAAc;AACjC,WAAS,cAAc,iBAAiB;AAChE,QAAM,mBAAmB,YAAY,iBAAiB,IAAI;AAC5B,QAAM,KAAK,gBAAgB;AAGzD,WAAS,KAAKA,OAAM;AAClB,UAAM,QAAQ,YAAY,iBAAiB,gBAAgBA,KAAI,UAAU;AACzE,UAAM,aAAa,MAAM,KAAK,KAAK;AAGnC,UAAM,oBAAoB,WAAW,OAAO,CAAC,KAAK,MAAM,UAAU;AAChE,UAAI,QAAQ,WAAW,SAAS,GAAG;AACjC,cAAM,WAAW,KAAK,sBAAqB,EAAG;AAC9C,cAAM,QAAQ,WAAW,QAAQ,CAAC,EAAE,sBAAuB,EAAC;AAC5D,cAAM,QAAQ,QAAQ;AAGtB,cAAM,8BACJ,WAAW,QAAQ,CAAC,EAAE,cAAc,UAAU;AAAA,UAC5C;AAAA,QACD,KACD,WAAW,QAAQ,CAAC,MAClB,WAAW,QAAQ,CAAC,EAAE,cAAc;AAGxC,YAAI,6BAA6B;AAC/B,cAAI,KAAK,CAAC;AAAA,QACpB,OAAe;AACL,cAAI,MAAM,IAAI,IAAI,SAAS,CAAC,KAAK,KAAK,KAAK,MAAM,KAAK,CAAC;AAAA,QACxD;AAAA,MACF;AACD,aAAO;AAAA,IACR,GAAE,CAAE,CAAA;AAEL,eAAW,QAAQ,CAAC,MAAM,UAAU;AACf,WAAK,aAAa,kBAAkB;AACvD,UAAI,KAAK,cAAc,YAAY,MAAM;AACvC,mBAAW,MAAM;AAEf,gBAAM,eAAe,YAAY,cAAc,eAAe;AAC9D,cAAI,cAAc;AAChB,yBAAa,UAAU,OAAO,cAAc;AAAA,UAC7C;AACD,cAAI,WAAW,QAAQ,CAAC,GAAG;AACzB,iBAAK,cAAc,MAAM,YAAY,aAAa,kBAAkB,KAAK,CAAC;AAC1E,iBAAK,UAAU,IAAI,cAAc;AAAA,UAClC;AAAA,QACX,GAAW,QAAQ,GAAI;AAAA,MAChB;AAAA,IACP,CAAK;AAAA,EACF;AAED,QAAM,UAAU,SAAS,iBAAiB,uBAAuB;AACjE,UAAQ,QAAQ,CAAC,WAAW;AAC1B,WAAO,iBAAiB,SAAS,MAAM;AACrC,WAAK,OAAO,aAAa,WAAW,CAAC;AAAA,IAC3C,CAAK;AAAA,EACL,CAAG;AACH,CAAC;"}