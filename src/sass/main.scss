@use "reset";
@use "typography";

//design tokens

$primary-color: #1b337a;
$primary-surface-color-1: #a3c2e5;
$primary-surface-color-2: #dde8f7;
$white: #ffffff;
$black: #000000;
$gray: #909dbf;

/* ------- Breakpoint ------- */
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;
$breakpoint-xxl: 1400px;

$breakpoints: (
  "sm": $breakpoint-sm,
  "md": $breakpoint-md,
  "lg": $breakpoint-lg,
  "xl": $breakpoint-xl,
  "xxl": $breakpoint-xxl,
);

/* ------- Spacer ------- */

$spacer-block-xxs: 1.5px;
$spacer-block-xs: 3px;
$spacer-block-sm: 6px;
$spacer-block-md: 9px;
$spacer-block-lg: 12px;
$spacer-block-xl: 15px;
$spacer-block-xxl: 25px;

$spacer-inline-xxs: calc(1.5px + 0.3vi);
$spacer-inline-xs: calc(3px + 0.3vi);
$spacer-inline-sm: calc(6px + 0.3vi);
$spacer-inline-md: calc(9px + 0.3vi);
$spacer-inline-lg: calc(12px + 0.3vi);
$spacer-inline-xl: calc(15px + 0.3vi);
$spacer-inline-xxl: calc(25px + 0.3vi);

$wrapper-padding-inline: $spacer-inline-md;

//layout

.container {
  .wrapper {
    padding-inline: $wrapper-padding-inline;
  }
}

@mixin container() {
  width: 100%;
  @each $key, $value in $breakpoints {
    @media (width >= $value) and (width >= $breakpoint-sm) {
      width: calc($value - $spacer-inline-lg);
    }
  }
}

.container {
  max-width: 800px;
  margin-inline: auto;
  @include container;
}

.fiche {
  h1 {
    margin-block-start: $spacer-block-lg;
    margin-block-end: $spacer-block-xxl;
  }

  &__header {
    background-color: $primary-color;
    color: $white;
    padding-block: $spacer-block-sm $spacer-block-md;
    padding-inline: $spacer-inline-sm;
  }
  &__body {
    .table {
      // use variable from the server to set the number of columns
      $col-count: 18;
      display: grid;
      grid-template-columns: repeat($col-count, minmax(20px, 1fr));
      .table__col {
        border-block-start: 1px solid $gray;
        margin-block-end: $spacer-block-lg;
        min-height: 200px;

        &:not(:last-child) > div {
          border-inline-end: 1px solid $gray;
        }

        & > div:first-child {
          display: flex;
          justify-content: center;
          align-items: baseline;

          padding-inline: $spacer-inline-xs;
          padding-block: $spacer-block-xs;

          color: $white;
          background-color: $primary-color;
        }
        & > ul {
          display: flex;
          flex-direction: column;
          justify-content: baseline;
          align-items: center;
          gap: $spacer-block-xs;

          li {
            display: flex;
            padding-block: $spacer-block-xs;
            align-items: baseline;
          }
        }
      }
      @media (width <= $breakpoint-md) {
        grid-template-columns: repeat(round($col-count / 2), minmax(20px, 1fr));
        .table__col {
          @for $i from 1 through 18 {
            &:nth-child(2n + 1) {
              background-color: $primary-surface-color-1;
            }
            &:nth-child(2n) {
              background-color: $primary-surface-color-2;
            }
            &:nth-child(2n + 10) {
              background-color: $primary-surface-color-1;
            }
            &:nth-child(2n + 11) {
              background-color: $primary-surface-color-2;
            }
          }
        }
      }
      @media (width >= $breakpoint-md) {
        .table__col {
          &:nth-child(even) {
            background-color: $primary-surface-color-2;
          }
          &:nth-child(odd) {
            background-color: $primary-surface-color-1;
          }
        }
      }
    }
  }
}
